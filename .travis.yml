sudo: false
language: rust
rust:
- nightly

# all unlabeled jobs run at test. Only if all "test" jobs finish, will the publish job run
stages:
  - test
  - publish

jobs:
  include:

  # PRs, pushes to master, and tags build on all target arches
  # if this is release tag, the resultant binary will be uploaded to github
  - name: "Linux - Node 8"
    os: linux
    env:
    - TRAVIS_NODE_VERSION="8"
    - SKIP_DEPLOY=0
    if: tag =~ /^v\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
  - name: "OSX - Node 8"
    os: osx
    env:
    - TRAVIS_NODE_VERSION="8"
    - SKIP_DEPLOY=0
    if: tag =~ /^v\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
  - name: "Linux - Node 10"
    os: linux
    env:
    - TRAVIS_NODE_VERSION="10"
    - SKIP_DEPLOY=0
    if: tag =~ /^v\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
  - name: "OSX - Node 10"
    os: osx
    env:
    - TRAVIS_NODE_VERSION="10"
    - SKIP_DEPLOY=0
    if: tag =~ /^v\d+\.\d+\.\d+/ OR branch = master OR type = pull_request

  # Publish to npm only on release tag
  - stage: publish
    name: "Publish to npm"
    os: linux
    env: 
      - TRAVIS_NODE_VERSION="8"
      - SKIP_DEPLOY=1
      
    if: tag =~ /^v\d+\.\d+\.\d+/
    before_install:
      - npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
    script: 
      - echo "Deploying to NPM..."
      - node publish.js --publish

install:
  # install our own nodejs to get a reasonable version
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
  
  # install our own yarn to make things work on osx
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.10.1
  - export PATH=$HOME/.yarn/bin:$PATH

cache:
    yarn: true
    cargo: true
    directories:
        - node_modules
before_script:
    - rustup component add rustfmt-preview
    - yarn install --ignore-scripts
script:
    # - pushd native/ && cargo fmt -- --check && popd
    - node publish.js

# deploy the node-pre-gyp binary to github releases so it's there when the npm package is installed
deploy:
    provider: releases
    api_key:
        secure: QEtdpmu5AQfpv2uziOo3yZzlibXFvTjw4zu8LisXAJr2kJIBSIvZnLkjWTCbVqXkRJduw3Qbi8YMBM0oUJih3MQzeC4MySbx8l/kxqMH1rckk5YKy4IYraelNVtbQ6mxwCzYGxS5ACxU3HcV/RwnyVtqBLpAd1+hLfNldddoX6c7y2wEDomMFBb3WmbukzRSD8FWBV4eVd69famRA1XthzjDuJoaErpHrNgUSi9sn1ovcO7owCrIoT/uyR14T8mp/kfelPMzE3jYt9E3a3hWU/mMeqNfElHGKdajSPiqdB/LJVyU1HFXGuTPiZvJTJOIpK/scbSr97gvVmAgB/6APj9nukJyOTEKNZVXkSRpU0AMsjkAVHsaIBcTV62I/Tfqweu/SMnTvUqawvm+qu9MbIrMPsMMs/KjIkPoE5U4j5D8L++B5pD81tkdmIXZtmWKbbQVN0/jXUUbr5DHuHmNOMmvMwFd9ScdTEvA2TbULi9MnOhS9GURfgzO6a0W4p15NLY9M73HUH0VYdkBFPz5aHHhg5tE9WXeFD+7siKniXLLX71C1qC06hKnLFwix9X+UJP2TLVQjOy1xPpBL7W7xB35XdZ1h96HLNI5BCQ3yjB8yCQtxV8wyt5oEJrsDxWIYwJd1KN3+gZKCf6NMz6MBoSwbntQeJic2zjTqc9kx5I=
    file_glob: true
    file: bin-package/*.tar.gz
    skip_cleanup: true

    # publish only if we're building a tag and if the SKIP_DEPLOY is set to 0
    on:
        tags: true
        condition: $SKIP_DEPLOY = 0
    name: Version $TRAVIS_TAG
