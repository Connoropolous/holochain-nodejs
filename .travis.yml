sudo: false
language: rust
rust:
- nightly

# all unlabeled jobs run at test. Only if all "test" jobs finish, will the publish job run
stages:
  - test
  - publish

jobs:
  include:

  # PRs, pushes to master, and tags build on all target arches
  # if this is release tag, the resultant binary will be uploaded to github
  - name: "Linux - Node 8"
    os: linux
    env:
    - TRAVIS_NODE_VERSION="8"
    - SKIP_DEPLOY=0
    if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
  - name: "OSX - Node 8"
    os: osx
    env:
    - TRAVIS_NODE_VERSION="8"
    - SKIP_DEPLOY=0
    if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
  - name: "Linux - Node 10"
    os: linux
    env:
    - TRAVIS_NODE_VERSION="10"
    - SKIP_DEPLOY=0
    if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
  - name: "OSX - Node 10"
    os: osx
    env:
    - TRAVIS_NODE_VERSION="10"
    - SKIP_DEPLOY=0
    if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request

  # Publish to npm only on release tag
  - stage: publish
    name: "Publish to npm"
    os: linux
    env: 
      - TRAVIS_NODE_VERSION="8"
      - SKIP_DEPLOY=1
      
      # NPM_TOKEN 
      - secure: 
          mZv6OpOC4Z+K5mEPGW2+TiNC5WtflXAXjISfq6GUXjGuYwCYw5ENn7j/iEU4gmT/jfw//T3kPUkUiuHPjhqsW4tU/eT0Yg68CnXtMMdi1NKJIuvsXjC8jVzteBvWzLlii/0/DM1LJhg63qJJpN6FJ+ElY5uscpTufY4zg202FyGGlHBqGcrIBqdEUpgPQsiu0dgbAhYEdmJLqITi4K6Zf8WbqXKE9XzmoWlNwC38nG511Jw7ogqlMUS9PbgLRURESMBrmba9bzrRLjC1mq4OIGftCMuWoWi6Qt8ZnPvZ0s5YyyFkdsHoEL6qLsBWwCEq6Kl47TTu1GjcdFx5LdNWSDSnQHBerBBG0A2CFFa9o8eQoKj+mxiW0pEIKpPfsHtzyZirssZOb9enkUHfOr4XhLyGMENKShb+VAsQM7ogO6eLd27MhoXR9E+ykfXGB52ohQoMWtLkQZIraiEeTHwopJgk1CjAt/EJvgGmoRIzt3d4cFL4pVMa/VRg8EoPjyFZnOsBkz+NZLMLkoB9QxmqD4EAiAUh9RDi8bttGI2v/FvWFfBNL2YhI+/RubTvosowiASIIArk9THjJtfTCoRaby7FCwYvA/FAlAIXcxy53yw9OIZLqj+KVNoJ4t+Tag+057sOES3mMXwbXBLOBpfGqRt7yRUn5Lrv/REO2gUzpwk=
    if: tag =~ /^\d+\.\d+\.\d+/
    before_install:
      - npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
    script: 
      - echo "Deploying to NPM..."
      - node publish.js --publish

install:
  # install our own yarn to make things work on osx
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.10.1
  - export PATH=$HOME/.yarn/bin:$PATH
  
  # install our own nodejs to get a reasonable version
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION

cache:
    yarn: true
    cargo: true
    directories:
        - node_modules
before_script:
    - rustup component add rustfmt-preview
    - yarn install --ignore-scripts
script:
    # - pushd native/ && cargo fmt -- --check && popd
    - node publish.js

# # deploy the node-pre-gyp binary to github releases so it's there when the npm package is installed
# deploy:
#     provider: releases
#     api_key:
#         secure: bqeFXHY/NMLwbyIY4ch/KFhTyEpZFeO8MeHKTKEPdqk7OPh77aShiixUNNi1oBv8Nw4sjqM1nhx+j5UlPcbyPD4IWlosgPkYpNzZgcSUM61UEaSJ7oa3QYi6fT/qawTeGX7g7iVV72Sz9NMk+dSTZMSZM02iBcFczGgsfyq+cyV5HJiyP7DcSASARsXXt72D4B9GKVmqa6n5Dk8FSwE024h/duLtzPAEWAxK3eJsaDN0OdJKXq7/nTtEf0Hblbl0hkO4ce3RVZQg3nm0k1IDabglEMto9t6BavZobEm9YZoeePhAdH/WybSGBvJKwN29D9fNvNBf8UDBxa8gL3pIdLM8yucBWL888ku/zs6cAlg2BcY7e8gOiVuYUh8pznXPpYbo65N1w+EzuwQk/MgHPr/Fnh7Uois+1ymtQhxXbFqvqDXFDCHh7P3n4H6uN15iTpqdvHkC1HCnebL47bW657AD1spB6pNefWOUVpa66abWXmEoRakpGHaIdbhlKoaPo1tkImlSRbW/3Yt4zRSn3Dv1Va7vrRLtoJ4mD/ilD7QhmJK/ksqncS02hCQjiTExplS+2VjV4kZA4+lNmkTo3EyhS+DKZrPcXa/AMu/n7yFXpRNX6gUtDbbp8+QlODbOauooaL82RNb8Xw46jiqtUapKpo+dYOFwWFQgmSi5PKQ=
#     file_glob: true
#     file: bin-package/*.tar.gz
#     skip_cleanup: true

#     # publish only if we're building a tag and if the SKIP_DEPLOY is set to 0
#     on:
#         tags: true
#         condition: $SKIP_DEPLOY = 0
#     name: Version $TRAVIS_TAG
